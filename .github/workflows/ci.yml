name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: contacthub
          POSTGRES_PASSWORD: password
          POSTGRES_DB: contacthub_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Generate Prisma client
      run: npx prisma generate
    
    - name: Push database schema
      run: npx prisma db push
      env:
        DATABASE_URL: postgresql://bitespeed:password@localhost:5432/bitespeed_db
    
    - name: Build application
      run: npm run build
    
    - name: Start application
      run: npm start &
      env:
        DATABASE_URL: postgresql://bitespeed:password@localhost:5432/bitespeed_db
        NODE_ENV: test
    
    - name: Wait for application to start
      run: sleep 10
    
    - name: Test health endpoint
      run: curl -f http://localhost:3000/health
    
    - name: Test identify endpoint
      run: |
        curl -f -X POST http://localhost:3000/identify \
          -H "Content-Type: application/json" \
          -d '{"email":"test@example.com","phoneNumber":"123456"}'

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to production
      run: |
        echo "Add your deployment steps here"
        echo "For example:"
        echo "- Build Docker image"
        echo "- Push to registry"
        echo "- Deploy to cloud provider"
